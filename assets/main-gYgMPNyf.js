import{m as o,t as C}from"./typeIcons-wyGrPWsT.js";const t={allPokemons:[],filteredPokemons:[],currentPage:1,itemsPerPage:12,sortOption:"id-asc",currentFilterType:"",searchTerm:""};function _(e){const r={currentPage:t.currentPage,currentSort:t.sortOption,currentFilterType:t.currentFilterType||"",searchTerm:o.searchInput.value.trim()};localStorage.setItem("pokedexState",JSON.stringify(r)),localStorage.setItem("currentPokemonID",e),window.location.href=`details.html?id=${e}`}const p=12;async function S(){try{const r=await(await fetch("https://pokeapi.co/api/v2/pokemon?limit=2000")).json();t.allPokemons=r.results.filter(l=>c(l.url)<1e4),console.log("Pokemons loaded:",t.allPokemons),t.totalPages=Math.ceil(t.allPokemons.length/p)}catch(e){throw console.error("Error fetching all pokemons:",e),e}}async function P(e){try{return await(await fetch(`https://pokeapi.co/api/v2/pokemon/${e}`)).json()}catch(r){return console.error(`Failed to fetch Pokemon data for ID ${e}:`,r),null}}function c(e){const r=e.split("/").filter(Boolean);return parseInt(r[r.length-1],10)}function M(e){return e.charAt(0).toUpperCase()+e.slice(1)}async function E(){try{o.listWrapper.innerHTML="",o.loader.style.display="flex";const e=t.currentFilterType?t.filteredPokemons:t.allPokemons;console.log("Pokemons to load:",e),t.totalPages=Math.ceil(e.length/p),console.log("Total pages:",t.totalPages);const r=(t.currentPage-1)*p,l=r+p,a=e.slice(r,l);console.log("Current page pokemons:",a);const i=await Promise.all(a.map(d=>P(c(d.url))));w(a,i),F()}catch(e){console.error("Error loading pokemons:",e)}finally{o.loader.style.display="none"}}function w(e,r){o.listWrapper.innerHTML="",o.listWrapper.style.opacity="0";const l=document.createDocumentFragment(),a=[];e.forEach((i,d)=>{if(r[d]){const u=c(i.url),{card:s,imageLoadPromise:m}=b(i,u,r[d]);a.push(m),l.appendChild(s)}}),o.listWrapper.appendChild(l),Promise.all(a).then(()=>{o.listWrapper.style.opacity="1"})}function b(e,r,l){if(!l)return document.createElement("div");const a=document.createElement("div");a.className="card",a.dataset.id=r;const d=l.types.map(n=>n.type.name).map(n=>`
    <div class="card__type ${n}">
      <img src="${C[n]}" title="${n}" alt="${n}" />
      <div>${n}</div>
    </div>
  `).join("");a.innerHTML=`
    <div class="card__id">#${String(r).padStart(4,"0")}</div>
    <div class="card__img"></div>
    <div class="card__name">${M(e.name)}</div>
    <div class="card__types">${d}</div>
  `;const u=(n,g)=>{var y,k,h,v;return n!=null&&n.sprites?((k=(y=n.sprites.other)==null?void 0:y.home)==null?void 0:k.front_default)||((v=(h=n.sprites.other)==null?void 0:h["official-artwork"])==null?void 0:v.front_default)||n.sprites.front_default:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${g}.png`},s=document.createElement("img");s.src=u(l,r),s.alt=e.name,s.loading="lazy",s.onerror=()=>{s.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${r}.png`,s.onerror=()=>{s.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${r}.png`}};const m=new Promise(n=>{s.onload=()=>{s.classList.add("loaded"),n()},s.onerror=()=>n()});return a.querySelector(".card__img").appendChild(s),a.addEventListener("click",()=>{_(r)}),{card:a,imageLoadPromise:m}}function F(){o.pageInfo.textContent=`Page ${t.currentPage} of ${t.totalPages}`,o.pageInput.value=t.currentPage,o.firstButton.disabled=t.currentPage===1,o.prevButton.disabled=t.currentPage===1,o.nextButton.disabled=t.currentPage===t.totalPages,o.lastButton.disabled=t.currentPage===t.totalPages}async function B(){const e=o.filterSelect.value;if(t.currentFilterType=e,!t.allPokemons.length){console.warn("Pokemons are not yet loaded.");return}e===""?f():await I(e)}async function I(e){try{o.listWrapper.innerHTML="",o.loader.style.display="flex";const r=e==="All types"?"":e;if(!r)console.log("Filtering pokemons by type: All Types"),t.filteredPokemons=[...t.allPokemons],t.totalPages=Math.ceil(t.filteredPokemons.length/p),t.currentPage=1;else{console.log(`Filtering pokemons by type: ${r}`);const u=await Promise.all(t.allPokemons.map(s=>P(c(s.url))));t.filteredPokemons=t.allPokemons.filter((s,m)=>{const n=u[m];return n&&n.types.some(g=>g.type.name===r)}),console.log("Filtered pokemons:",t.filteredPokemons),t.totalPages=Math.ceil(t.filteredPokemons.length/p),t.currentPage=1}const l=(t.currentPage-1)*p,a=l+p,i=t.filteredPokemons.slice(l,a);console.log("Current page pokemons after filter:",i);const d=await Promise.all(i.map(u=>P(c(u.url))));w(i,d),F()}catch(r){console.error("Error filtering pokemons by type:",r)}finally{o.loader.style.display="none"}}function f(){console.log("Resetting type filter, showing all pokemons."),t.currentFilterType="",t.filteredPokemons=[...t.allPokemons],t.currentPage=1,E()}function A(){const e=o.searchInput.value.toLowerCase().trim();e?N(e):$(),o.searchClear.style.display=e?"block":"none"}function N(e){filteredPokemons=state.allPokemons.filter(r=>{const l=getPokemonIDFromURL(r.url).toString(),a=r.name.toLowerCase();return l.includes(e)||a.includes(e)}),state.totalPages=Math.ceil(filteredPokemons.length/POKEMONS_PER_PAGE),currentPage=1,filteredPokemons.length===0?displayNoResultsMessage():displayFilteredPokemons()}function $(){filteredPokemons=[],currentPage=1,o.searchInput.value="",o.searchClear.style.display="none",loadPokemons();const e=localStorage.getItem("pokedexState");if(e){const r=JSON.parse(e);r.searchTerm="",localStorage.setItem("pokedexState",JSON.stringify(r))}}function O(){o.searchInput.value="",o.searchClear.style.display="none",$()}function x(){o.firstButton.addEventListener("click",()=>loadPage(1)),o.prevButton.addEventListener("click",()=>loadPage(currentPage-1)),o.nextButton.addEventListener("click",()=>loadPage(currentPage+1)),o.lastButton.addEventListener("click",()=>loadPage(state.totalPages)),o.goButton.addEventListener("click",T),o.pageInput.addEventListener("keypress",e=>{e.key==="Enter"&&T()}),o.filterSelect.addEventListener("change",B),o.searchInput.addEventListener("input",A),o.searchClear.addEventListener("click",O),o.sortSelect.addEventListener("change",()=>{currentSort=o.sortSelect.value,sortPokemons()})}function T(){const e=parseInt(o.pageInput.value,10);!isNaN(e)&&e>=1&&e<=state.totalPages?loadPage(e):o.pageInput.value=currentPage}function L(){t.currentSort==="id-asc"?t.allPokemons.sort((e,r)=>c(e.url)-c(r.url)):t.currentSort==="id-desc"?t.allPokemons.sort((e,r)=>c(r.url)-c(e.url)):t.currentSort==="name-asc"?t.allPokemons.sort((e,r)=>e.name.localeCompare(r.name)):t.currentSort==="name-desc"&&t.allPokemons.sort((e,r)=>r.name.localeCompare(e.name)),E()}document.addEventListener("DOMContentLoaded",()=>{o.filterSelect.value=""});async function H(){try{const e=localStorage.getItem("pokedexState");if(o.filterSelect.value="",t.currentFilterType="",e){const r=JSON.parse(e);o.searchInput.value=r.searchTerm||"",o.sortSelect.value=r.currentSort||"id-asc",r.currentFilterType&&(o.filterSelect.value=r.currentFilterType,t.currentFilterType=r.currentFilterType),await S(),L(),r.searchTerm||(r.currentFilterType?await I(r.currentFilterType):f())}else o.loader.style.display="flex",await S(),L(),f();x()}catch(e){console.error("Error initializing app:",e)}finally{o.loader.style.display="none"}}o.loader.innerHTML=`
  <div class="loader-container">
    <div class="o-pokeball u-tada"></div>
    <p class="loader-text">Pok√©mons are coming...</p>
  </div>
`;document.body.appendChild(o.loader);H();
