import{m as n,t as B}from"./typeIcons-EVy8AarX.js";const e={allPokemons:[],typeFiltered:[],searchResults:[],currentDisplay:[],filteredPokemons:[],currentPage:1,itemsPerPage:12,sortOption:"id-asc",currentFilterType:"",searchTerm:""};function _(t){const r={currentPage:e.currentPage,currentSort:e.sortOption,currentFilterType:e.currentFilterType||"",searchTerm:n.searchInput.value.trim()};localStorage.setItem("pokedexState",JSON.stringify(r)),localStorage.setItem("currentPokemonID",t),window.location.href=`details.html?id=${t}`}const p=12;async function $(){try{const r=await(await fetch("https://pokeapi.co/api/v2/pokemon?limit=10000")).json();e.allPokemons=r.results.filter(a=>i(a.url)<1e4),e.totalPages=Math.ceil(e.allPokemons.length/p)}catch(t){throw console.error("Error fetching all pokemons:",t),t}}async function h(t){try{return await(await fetch(`https://pokeapi.co/api/v2/pokemon/${t}`)).json()}catch(r){return console.error(`Failed to fetch Pokemon data for ID ${t}:`,r),null}}function i(t){try{const r=t.split("/").filter(Boolean);return parseInt(r[r.length-1],10)}catch(r){return console.error(`Error parsing Pokemon URL: ${t}`,r),null}}function W(t){return t.charAt(0).toUpperCase()+t.slice(1)}function d(t){n.loader&&(n.loader.style.display=t?"flex":"none")}function f(){const t=e.filteredPokemons.length>0?e.filteredPokemons:e.allPokemons;switch(e.sortOption){case"id-asc":t.sort((r,a)=>i(r.url)-i(a.url));break;case"id-desc":t.sort((r,a)=>i(a.url)-i(r.url));break;case"name-asc":t.sort((r,a)=>r.name.localeCompare(a.name));break;case"name-desc":t.sort((r,a)=>a.name.localeCompare(r.name));break}e.filteredPokemons.length>0?e.currentDisplay=[...e.filteredPokemons]:e.currentDisplay=[...e.allPokemons],m()}async function m(){try{n.listWrapper.innerHTML="",d(!0);const t=e.currentDisplay.length>0?e.currentDisplay:e.allPokemons;e.totalPages=Math.max(1,Math.ceil(t.length/p)),e.currentPage=Math.max(1,Math.min(e.currentPage,e.totalPages));const r=t.slice((e.currentPage-1)*p,e.currentPage*p),a=await Promise.all(r.map(async s=>{try{return await h(i(s.url))}catch(l){return console.error(`Failed to load pokemon ${s.name}:`,l),null}}));await F(r,a)}catch(t){console.error("Error loading pokemons:",t),N()}finally{d(!1),w()}}function F(t,r){n.listWrapper.innerHTML="",n.listWrapper.style.opacity="0";const a=document.createDocumentFragment(),s=[];t.forEach((l,y)=>{if(r[y]){const g=i(l.url),{card:c,imageLoadPromise:P}=D(l,g,r[y]);s.push(P),a.appendChild(c)}}),n.listWrapper.appendChild(a),Promise.all(s).then(()=>{n.listWrapper.style.opacity="1"})}function D(t,r,a){var v;const s=document.createElement("div");s.className="card",s.dataset.id=r;const y=(((v=a==null?void 0:a.types)==null?void 0:v.map(o=>o.type.name))||[]).map(o=>`
        <div class="card__type ${o}">
            <img src="${B[o]}" title="${o}" alt="${o}" />
            <div>${o}</div>
        </div>
    `).join("");s.innerHTML=`
        <div class="card__id">#${String(r).padStart(4,"0")}</div>
        <div class="card__img"></div>
        <div class="card__name">${W(t.name)}</div>
        <div class="card__types">${y}</div>
    `;const g=(o,C)=>{var T,L,E,S;return o!=null&&o.sprites?((L=(T=o.sprites.other)==null?void 0:T.home)==null?void 0:L.front_default)||((S=(E=o.sprites.other)==null?void 0:E["official-artwork"])==null?void 0:S.front_default)||o.sprites.front_default:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${C}.png`},c=document.createElement("img");c.src=g(a,r),c.alt=t.name,c.loading="lazy";const P=new Promise(o=>{c.onload=()=>{c.classList.add("loaded"),o()},c.onerror=()=>o()});return s.querySelector(".card__img").appendChild(c),s.addEventListener("click",()=>{_(r)}),{card:s,imageLoadPromise:P}}function w(){n.pageInfo.textContent=`Page ${e.currentPage} of ${e.totalPages}`,n.pageInput.value=e.currentPage,document.querySelectorAll(".firstButton, .prevButton").forEach(t=>{t.disabled=e.currentPage===1,t.classList.toggle("disabled",e.currentPage===1)}),document.querySelectorAll(".nextButton, .lastButton").forEach(t=>{t.disabled=e.currentPage===e.totalPages||e.totalPages===0,t.classList.toggle("disabled",e.currentPage===e.totalPages||e.totalPages===0)})}async function R(){n.listWrapper.innerHTML="",d(!0);try{const t=(e.currentPage-1)*p,r=t+p,a=e.filteredPokemons.slice(t,r),s=await Promise.all(a.map(l=>h(i(l.url))));F(a,s),w()}catch(t){console.error("Error displaying filtered pokemons:",t)}finally{d(!1)}}function I(){n.listWrapper.innerHTML=`
        <div class="no-results">No Pokémon found</div>
    `}async function u(t){t=Math.max(1,Math.min(t,e.totalPages)),t!==e.currentPage&&(e.currentPage=t,await m())}function N(){var t;n.listWrapper.innerHTML=`
        <div class="error-state">
            <p>Failed to load Pokémon data</p>
            <button class="retry-button">Try Again</button>
        </div>
    `,(t=n.listWrapper.querySelector(".retry-button"))==null||t.addEventListener("click",m)}function x(){const t=n.searchInput.value.toLowerCase().trim();e.searchTerm=t,n.searchClear.style.display=t?"block":"none",t?A(t):M()}function A(t){const r=e.currentFilterType?e.typeFiltered:e.allPokemons;e.searchResults=r.filter(a=>{const s=i(a.url).toString(),l=a.name.toLowerCase();return s.includes(t)||l.includes(t)}),e.searchTerm=t,k(),H()}function H(){e.totalPages=Math.ceil(e.currentDisplay.length/p),e.currentPage=1,e.currentDisplay.length===0?I():R()}function O(){n.searchInput&&(n.searchInput.value=""),n.searchClear&&(n.searchClear.style.display="none"),M(),n.listWrapper&&(n.listWrapper.style.opacity="0",setTimeout(()=>{n.listWrapper.style.opacity="1"},150))}function M(){e.searchTerm="",e.searchResults=[],e.currentFilterType?e.currentDisplay=[...e.typeFiltered]:e.currentDisplay=[...e.allPokemons],e.filteredPokemons=[...e.currentDisplay],e.currentPage=1,f(),m()}function k(){e.currentFilterType&&e.searchTerm?e.currentDisplay=[...e.searchResults]:e.currentFilterType?e.currentDisplay=[...e.typeFiltered]:e.searchTerm?e.currentDisplay=[...e.searchResults]:e.currentDisplay=[...e.allPokemons],e.filteredPokemons=[...e.currentDisplay]}async function q(){const t=n.filterSelect.value;if(e.currentFilterType=t,!e.allPokemons.length){console.warn("Pokemons are not yet loaded.");return}t===""?U():await z(t)}async function z(t){try{if(d(!0),n.listWrapper.innerHTML="",!t)e.typeFiltered=[...e.allPokemons],e.currentFilterType="";else{const r=await Promise.all(e.allPokemons.map(a=>h(i(a.url))));e.typeFiltered=e.allPokemons.filter((a,s)=>{const l=r[s];return l==null?void 0:l.types.some(y=>y.type.name===t)}),e.currentFilterType=t}if(e.searchTerm&&(e.searchResults=e.typeFiltered.filter(r=>{const a=i(r.url).toString(),s=r.name.toLowerCase();return a.includes(e.searchTerm)||s.includes(e.searchTerm)})),k(),e.currentDisplay.length===0){I();return}e.currentPage=1,f(),await m()}catch(r){console.error("Error filtering pokemons by type:",r),displayErrorState()}finally{d(!1)}}function U(){e.currentFilterType="",e.typeFiltered=[...e.allPokemons],e.searchTerm&&(e.searchResults=e.allPokemons.filter(t=>{const r=i(t.url).toString(),a=t.name.toLowerCase();return r.includes(e.searchTerm)||a.includes(e.searchTerm)})),k(),e.currentPage=1,f(),m()}function j(){n.firstButton.addEventListener("click",()=>u(1)),n.prevButton.addEventListener("click",()=>u(e.currentPage-1)),n.nextButton.addEventListener("click",()=>u(e.currentPage+1)),n.lastButton.addEventListener("click",()=>u(e.totalPages)),n.firstButtonMobile.addEventListener("click",()=>u(1)),n.prevButtonMobile.addEventListener("click",()=>u(e.currentPage-1)),n.nextButtonMobile.addEventListener("click",()=>u(e.currentPage+1)),n.lastButtonMobile.addEventListener("click",()=>u(e.totalPages)),n.pageInput.addEventListener("keypress",t=>{t.key==="Enter"&&G()}),n.filterSelect.addEventListener("change",q),n.searchInput.addEventListener("input",x),n.searchClear.addEventListener("click",O),n.sortSelect.addEventListener("change",()=>{e.sortOption=n.sortSelect.value,f();const t={currentPage:e.currentPage,currentSort:e.sortOption,currentFilterType:e.currentFilterType,searchTerm:e.searchTerm};localStorage.setItem("pokedexState",JSON.stringify(t))})}function G(){const t=parseInt(n.pageInput.value,10);!isNaN(t)&&t>=1&&t<=e.totalPages?u(t):n.pageInput.value=e.currentPage}async function b(){try{d(!0),await $(),e.filteredPokemons=[...e.allPokemons],await m(),j()}catch(t){console.error("Error initializing app:",t),n.listWrapper.innerHTML=`
          <div class="error-message">
            Failed to initialize. <button id="retry-btn">Retry</button>
          </div>
        `,document.getElementById("retry-btn").addEventListener("click",b)}finally{d(!1)}}b();
