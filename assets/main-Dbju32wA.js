import{m as r,t as M}from"./typeIcons-HNXjE7nu.js";const e={allPokemons:[],filteredPokemons:[],currentPage:1,itemsPerPage:12,sortOption:"id-asc",currentFilterType:"",searchTerm:""};function _(t){const n={currentPage:e.currentPage,currentSort:e.sortOption,currentFilterType:e.currentFilterType||"",searchTerm:r.searchInput.value.trim()};localStorage.setItem("pokedexState",JSON.stringify(n)),localStorage.setItem("currentPokemonID",t),window.location.href=`details.html?id=${t}`}const d=12;async function $(){try{const n=await(await fetch("https://pokeapi.co/api/v2/pokemon?limit=10000")).json();e.allPokemons=n.results.filter(a=>c(a.url)<1e4),console.log("Pokemons loaded:",e.allPokemons),e.totalPages=Math.ceil(e.allPokemons.length/d)}catch(t){throw console.error("Error fetching all pokemons:",t),t}}async function y(t){try{return await(await fetch(`https://pokeapi.co/api/v2/pokemon/${t}`)).json()}catch(n){return console.error(`Failed to fetch Pokemon data for ID ${t}:`,n),null}}function c(t){const n=t.split("/").filter(Boolean);return parseInt(n[n.length-1],10)}function A(t){return t.charAt(0).toUpperCase()+t.slice(1)}async function p(){try{r.listWrapper.innerHTML="",r.loader.style.display="flex";const t=e.filteredPokemons.length>0?e.filteredPokemons:e.allPokemons;e.totalPages=Math.ceil(t.length/d),e.currentPage=Math.min(e.currentPage,e.totalPages||1);const n=t.slice((e.currentPage-1)*d,e.currentPage*d),a=await Promise.all(n.map(o=>y(c(o.url))));S(n,a)}finally{r.loader.style.display="none",L()}}function S(t,n){r.listWrapper.innerHTML="",r.listWrapper.style.opacity="0";const a=document.createDocumentFragment(),o=[];t.forEach((i,u)=>{if(n[u]){const P=c(i.url),{card:l,imageLoadPromise:f}=B(i,P,n[u]);o.push(f),a.appendChild(l)}}),r.listWrapper.appendChild(a),Promise.all(o).then(()=>{r.listWrapper.style.opacity="1"})}function B(t,n,a){if(!a)return document.createElement("div");const o=document.createElement("div");o.className="card",o.dataset.id=n;const u=a.types.map(s=>s.type.name).map(s=>`
    <div class="card__type ${s}">
      <img src="${M[s]}" title="${s}" alt="${s}" />
      <div>${s}</div>
    </div>
  `).join("");o.innerHTML=`
    <div class="card__id">#${String(n).padStart(4,"0")}</div>
    <div class="card__img"></div>
    <div class="card__name">${A(t.name)}</div>
    <div class="card__types">${u}</div>
  `;const P=(s,C)=>{var g,h,k,v;return s!=null&&s.sprites?((h=(g=s.sprites.other)==null?void 0:g.home)==null?void 0:h.front_default)||((v=(k=s.sprites.other)==null?void 0:k["official-artwork"])==null?void 0:v.front_default)||s.sprites.front_default:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${C}.png`},l=document.createElement("img");l.src=P(a,n),l.alt=t.name,l.loading="lazy",l.onerror=()=>{l.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${n}.png`,l.onerror=()=>{l.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${n}.png`}};const f=new Promise(s=>{l.onload=()=>{l.classList.add("loaded"),s()},l.onerror=()=>s()});return o.querySelector(".card__img").appendChild(l),o.addEventListener("click",()=>{_(n)}),{card:o,imageLoadPromise:f}}function L(){r.pageInfo.textContent=`Page ${e.currentPage} of ${e.totalPages}`,r.pageInput.value=e.currentPage,r.firstButton.disabled=e.currentPage===1,r.prevButton.disabled=e.currentPage===1,r.nextButton.disabled=e.currentPage===e.totalPages||e.totalPages===0,r.lastButton.disabled=e.currentPage===e.totalPages||e.totalPages===0}async function O(){r.listWrapper.innerHTML="",r.loader.style.display="flex";try{const t=(e.currentPage-1)*d,n=t+d,a=e.filteredPokemons.slice(t,n),o=await Promise.all(a.map(i=>y(c(i.url))));S(a,o),L()}catch(t){console.error("Error displaying filtered pokemons:",t)}finally{r.loader.style.display="none"}}function x(){r.listWrapper.innerHTML=`
    <div class="no-results">No Pokémon found</div>
  `}async function m(t){t=Math.max(1,Math.min(t,e.totalPages)),t!==e.currentPage&&(e.currentPage=t,await p())}async function W(){const t=r.filterSelect.value;if(e.currentFilterType=t,!e.allPokemons.length){console.warn("Pokemons are not yet loaded.");return}t===""?N():await E(t)}async function E(t){try{if(r.listWrapper.innerHTML="",r.loader.style.display="flex",!t)e.filteredPokemons=[],e.currentFilterType="";else{const n=await Promise.all(e.allPokemons.map(a=>y(c(a.url))));e.filteredPokemons=e.allPokemons.filter((a,o)=>{const i=n[o];return i&&i.types.some(u=>u.type.name===t)}),e.currentFilterType=t}e.currentPage=1,await p()}catch(n){console.error("Error filtering pokemons by type:",n)}finally{r.loader.style.display="none"}}function N(){console.log("Resetting type filter, showing all pokemons."),e.currentFilterType="",e.filteredPokemons=[...e.allPokemons],e.currentPage=1,p()}function w(){const t=r.searchInput.value.toLowerCase().trim();e.searchTerm=t,r.searchClear.style.display=t?"block":"none",t?H(t):F()}function H(t){const n=e.currentFilterType?e.typeFiltered:e.allPokemons;e.searchFiltered=n.filter(a=>{const o=c(a.url).toString(),i=a.name.toLowerCase();return o.includes(t)||i.includes(t)}),e.currentDisplay=e.searchFiltered,q()}function q(){e.totalPages=Math.ceil(e.filteredPokemons.length/d),e.currentPage=1,e.filteredPokemons.length===0?x():O()}async function F(){e.searchTerm="",r.searchInput.value="",r.searchClear.style.display="none",e.currentDisplay=e.currentFilterType?e.typeFiltered:e.allPokemons,applyCurrentSort(),e.currentPage=1,p()}function R(){r.searchInput.value="",r.searchClear.style.display="none",F(),r.listWrapper.style.opacity="0",setTimeout(()=>{r.listWrapper.style.opacity="1"},150)}function I(){const t=e.filteredPokemons.length>0?e.filteredPokemons:e.allPokemons;switch(e.sortOption){case"id-asc":t.sort((n,a)=>c(n.url)-c(a.url));break;case"id-desc":t.sort((n,a)=>c(a.url)-c(n.url));break;case"name-asc":t.sort((n,a)=>n.name.localeCompare(a.name));break;case"name-desc":t.sort((n,a)=>a.name.localeCompare(n.name));break}p()}function z(){document.querySelectorAll(".firstButton").forEach(t=>{t.addEventListener("click",()=>m(1))}),document.querySelectorAll(".prevButton").forEach(t=>{t.addEventListener("click",()=>m(e.currentPage-1))}),document.querySelectorAll(".nextButton").forEach(t=>{t.addEventListener("click",()=>m(e.currentPage+1))}),document.querySelectorAll(".lastButton").forEach(t=>{t.addEventListener("click",()=>m(e.totalPages))}),r.goButton.addEventListener("click",T),r.pageInput.addEventListener("keypress",t=>{t.key==="Enter"&&T()}),r.filterSelect.addEventListener("change",W),r.searchInput.addEventListener("input",w),r.searchClear.addEventListener("click",R),r.sortSelect.addEventListener("change",()=>{e.sortOption=r.sortSelect.value,I();const t={currentPage:e.currentPage,currentSort:e.sortOption,currentFilterType:e.currentFilterType,searchTerm:e.searchTerm};localStorage.setItem("pokedexState",JSON.stringify(t))})}function T(){const t=parseInt(r.pageInput.value,10);!isNaN(t)&&t>=1&&t<=e.totalPages?m(t):r.pageInput.value=e.currentPage}r.loader.innerHTML=`
  <div class="loader-container">
    <div class="o-pokeball u-tada"></div>
    <p class="loader-text">Pokémons are coming...</p>
  </div>
`;document.body.appendChild(r.loader);async function b(){try{if(r.loader.style.display="flex",await $(),!e.allPokemons||!e.allPokemons.length)throw new Error("Failed to load Pokémon data");e.filteredPokemons=[...e.allPokemons];const t=localStorage.getItem("pokedexState");if(t){const n=JSON.parse(t);e.sortOption=n.currentSort||"id-asc",e.currentFilterType=n.currentFilterType||"",e.searchTerm=n.searchTerm||"",r.sortSelect.value=e.sortOption,r.filterSelect.value=e.currentFilterType,r.searchInput.value=e.searchTerm,e.searchTerm?await w():e.currentFilterType&&await E(e.currentFilterType)}I(),await p(),z()}catch(t){console.error("Error initializing app:",t),r.listWrapper.innerHTML=`
      <div class="error-message">
        Failed to initialize. <button id="retry-btn">Retry</button>
      </div>
    `,document.getElementById("retry-btn").addEventListener("click",b)}finally{r.loader.style.display="none"}}b();
