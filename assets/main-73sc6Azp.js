import{m as o,t as _}from"./typeIcons-wyGrPWsT.js";const t={allPokemons:[],filteredPokemons:[],currentPage:1,itemsPerPage:12,sortOption:"id-asc",currentFilterType:"",searchTerm:""};function $(e){const r={currentPage:t.currentPage,currentSort:t.sortOption,currentFilterType:t.currentFilterType||"",searchTerm:o.searchInput.value.trim()};localStorage.setItem("pokedexState",JSON.stringify(r)),localStorage.setItem("currentPokemonID",e),window.location.href=`details.html?id=${e}`}const c=12;async function w(){try{const r=await(await fetch("https://pokeapi.co/api/v2/pokemon?limit=2000")).json();t.allPokemons=r.results.filter(s=>d(s.url)<1e4),console.log("Pokemons loaded:",t.allPokemons),t.totalPages=Math.ceil(t.allPokemons.length/c)}catch(e){throw console.error("Error fetching all pokemons:",e),e}}async function g(e){try{return await(await fetch(`https://pokeapi.co/api/v2/pokemon/${e}`)).json()}catch(r){return console.error(`Failed to fetch Pokemon data for ID ${e}:`,r),null}}function d(e){const r=e.split("/").filter(Boolean);return parseInt(r[r.length-1],10)}function M(e){return e.charAt(0).toUpperCase()+e.slice(1)}async function k(){try{o.listWrapper.innerHTML="",o.loader.style.display="flex";const e=t.currentFilterType?t.filteredPokemons:t.allPokemons;console.log("Pokemons to load:",e),t.totalPages=Math.ceil(e.length/c),console.log("Total pages:",t.totalPages);const r=(t.currentPage-1)*c,s=r+c,n=e.slice(r,s);console.log("Current page pokemons:",n);const i=await Promise.all(n.map(p=>g(d(p.url))));h(n,i),v()}catch(e){console.error("Error loading pokemons:",e)}finally{o.loader.style.display="none"}}function h(e,r){o.listWrapper.innerHTML="",o.listWrapper.style.opacity="0";const s=document.createDocumentFragment(),n=[];e.forEach((i,p)=>{if(r[p]){const u=d(i.url),{card:l,imageLoadPromise:m}=b(i,u,r[p]);n.push(m),s.appendChild(l)}}),o.listWrapper.appendChild(s),Promise.all(n).then(()=>{o.listWrapper.style.opacity="1"})}function b(e,r,s){if(!s)return document.createElement("div");const n=document.createElement("div");n.className="card",n.dataset.id=r;const p=s.types.map(a=>a.type.name).map(a=>`
    <div class="card__type ${a}">
      <img src="${_[a]}" title="${a}" alt="${a}" />
      <div>${a}</div>
    </div>
  `).join("");n.innerHTML=`
    <div class="card__id">#${String(r).padStart(4,"0")}</div>
    <div class="card__img"></div>
    <div class="card__name">${M(e.name)}</div>
    <div class="card__types">${p}</div>
  `;const u=(a,P)=>{var S,T,L,E;return a!=null&&a.sprites?((T=(S=a.sprites.other)==null?void 0:S.home)==null?void 0:T.front_default)||((E=(L=a.sprites.other)==null?void 0:L["official-artwork"])==null?void 0:E.front_default)||a.sprites.front_default:`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/${P}.png`},l=document.createElement("img");l.src=u(s,r),l.alt=e.name,l.loading="lazy",l.onerror=()=>{l.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${r}.png`,l.onerror=()=>{l.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${r}.png`}};const m=new Promise(a=>{l.onload=()=>{l.classList.add("loaded"),a()},l.onerror=()=>a()});return n.querySelector(".card__img").appendChild(l),n.addEventListener("click",()=>{$(r)}),{card:n,imageLoadPromise:m}}function v(){o.pageInfo.textContent=`Page ${t.currentPage} of ${t.totalPages}`,o.pageInput.value=t.currentPage,o.firstButton.disabled=t.currentPage===1,o.prevButton.disabled=t.currentPage===1,o.nextButton.disabled=t.currentPage===t.totalPages,o.lastButton.disabled=t.currentPage===t.totalPages}async function B(){o.listWrapper.innerHTML="",o.loader.style.display="flex";try{const e=(t.currentPage-1)*c,r=e+c,s=t.filteredPokemons.slice(e,r),n=await Promise.all(s.map(i=>g(d(i.url))));h(s,n),v()}catch(e){console.error("Error displaying filtered pokemons:",e)}finally{o.loader.style.display="none"}}function x(){o.listWrapper.innerHTML=`
    <div class="no-results">No Pokémon found</div>
  `}async function N(){const e=o.filterSelect.value;if(t.currentFilterType=e,!t.allPokemons.length){console.warn("Pokemons are not yet loaded.");return}e===""?f():await I(e)}async function I(e){try{o.listWrapper.innerHTML="",o.loader.style.display="flex";const r=e==="All types"?"":e;if(!r)console.log("Filtering pokemons by type: All Types"),t.filteredPokemons=[...t.allPokemons],t.totalPages=Math.ceil(t.filteredPokemons.length/c),t.currentPage=1;else{console.log(`Filtering pokemons by type: ${r}`);const u=await Promise.all(t.allPokemons.map(l=>g(d(l.url))));t.filteredPokemons=t.allPokemons.filter((l,m)=>{const a=u[m];return a&&a.types.some(P=>P.type.name===r)}),console.log("Filtered pokemons:",t.filteredPokemons),t.totalPages=Math.ceil(t.filteredPokemons.length/c),t.currentPage=1}const s=(t.currentPage-1)*c,n=s+c,i=t.filteredPokemons.slice(s,n);console.log("Current page pokemons after filter:",i);const p=await Promise.all(i.map(u=>g(d(u.url))));h(i,p),v()}catch(r){console.error("Error filtering pokemons by type:",r)}finally{o.loader.style.display="none"}}function f(){console.log("Resetting type filter, showing all pokemons."),t.currentFilterType="",t.filteredPokemons=[...t.allPokemons],t.currentPage=1,k()}function A(){const e=o.searchInput.value.toLowerCase().trim();t.searchTerm=e,e?H(e):C(),o.searchClear.style.display=e?"block":"none"}function H(e){t.filteredPokemons=t.allPokemons.filter(r=>{const s=d(r.url).toString(),n=r.name.toLowerCase();return s.includes(e)||n.includes(e)}),t.totalPages=Math.ceil(t.filteredPokemons.length/c),t.currentPage=1,t.filteredPokemons.length===0?x():B()}function C(){t.filteredPokemons=[...t.allPokemons],t.searchTerm="",t.currentPage=1,o.searchInput.value="",o.searchClear.style.display="none",k();const e=JSON.parse(localStorage.getItem("pokedexState")||"{}");e.searchTerm="",localStorage.setItem("pokedexState",JSON.stringify(e))}function O(){C()}function y(){t.currentSort==="id-asc"?t.allPokemons.sort((e,r)=>d(e.url)-d(r.url)):t.currentSort==="id-desc"?t.allPokemons.sort((e,r)=>d(r.url)-d(e.url)):t.currentSort==="name-asc"?t.allPokemons.sort((e,r)=>e.name.localeCompare(r.name)):t.currentSort==="name-desc"&&t.allPokemons.sort((e,r)=>r.name.localeCompare(e.name)),k()}function W(){o.firstButton.addEventListener("click",()=>loadPage(1)),o.prevButton.addEventListener("click",()=>loadPage(currentPage-1)),o.nextButton.addEventListener("click",()=>loadPage(currentPage+1)),o.lastButton.addEventListener("click",()=>loadPage(t.totalPages)),o.goButton.addEventListener("click",F),o.pageInput.addEventListener("keypress",e=>{e.key==="Enter"&&F()}),o.filterSelect.addEventListener("change",N),o.searchInput.addEventListener("input",A),o.searchClear.addEventListener("click",O),o.sortSelect.addEventListener("change",()=>{t.currentSort=o.sortSelect.value,y()})}function F(){const e=parseInt(o.pageInput.value,10);!isNaN(e)&&e>=1&&e<=t.totalPages?loadPage(e):o.pageInput.value=currentPage}o.loader.innerHTML=`
  <div class="loader-container">
    <div class="o-pokeball u-tada"></div>
    <p class="loader-text">Pokémons are coming...</p>
  </div>
`;document.body.appendChild(o.loader);async function z(){try{const e=localStorage.getItem("pokedexState");if(o.filterSelect.value="",t.currentFilterType="",e){const r=JSON.parse(e);o.searchInput.value=r.searchTerm||"",o.sortSelect.value=r.currentSort||"id-asc",r.currentFilterType&&(o.filterSelect.value=r.currentFilterType,t.currentFilterType=r.currentFilterType),await w(),y(),r.searchTerm||(r.currentFilterType?await I(r.currentFilterType):f())}else o.loader.style.display="flex",await w(),y(),f();W()}catch(e){console.error("Error initializing app:",e)}finally{o.loader.style.display="none"}}z();
